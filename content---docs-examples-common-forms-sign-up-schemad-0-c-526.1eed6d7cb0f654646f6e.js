(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{164:function(n,e,r){"use strict";r.d(e,"a",function(){return i}),r.d(e,"b",function(){return u});var t=r(0),a=r.n(t),o=a.a.createContext({}),s=function(n){var e=a.a.useContext(o),r=e;return n&&(r="function"==typeof n?n(e):Object.assign({},e,n)),r},i=function(n){var e=s(n.components);return a.a.createElement(o.Provider,{value:e},n.children)},c="mdxType",p={inlineCode:"code",wrapper:function(n){return a.a.createElement(a.a.Fragment,{},n.children)}},l=function(n){var e=n.components,r=n.mdxType,t=n.originalType,o=n.parentName,i=function(n,e){var r={};for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&-1===e.indexOf(t)&&(r[t]=n[t]);return r}(n,["components","mdxType","originalType","parentName"]),c=s(e);return a.a.createElement(c[o+"."+r]||c[r]||p[r]||t,e?Object.assign({},i,{components:e}):i)};function u(n,e){var r=arguments,t=e&&e.mdxType;if("string"==typeof n||t){var o=r.length,s=new Array(o);s[0]=l;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=n,i[c]="string"==typeof n?n:t,s[1]=i;for(var u=2;u<o;u++)s[u]=r[u];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,r)}l.displayName="MDXCreateElement"},85:function(n,e,r){"use strict";r.r(e),r.d(e,"frontMatter",function(){return s}),r.d(e,"rightToc",function(){return i}),r.d(e,"default",function(){return l});r(0);var t=r(164);function a(){return(a=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(n[t]=r[t])}return n}).apply(this,arguments)}function o(n,e){if(null==n)return{};var r,t,a=function(n,e){if(null==n)return{};var r,t,a={},o=Object.keys(n);for(t=0;t<o.length;t++)r=o[t],e.indexOf(r)>=0||(a[r]=n[r]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)r=o[t],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(a[r]=n[r])}return a}var s={},i=[],c={rightToc:i},p="wrapper";function l(n){var e=n.components,r=o(n,["components"]);return Object(t.b)(p,a({},c,r,{components:e,mdxType:"MDXLayout"}),Object(t.b)("pre",null,Object(t.b)("code",a({parentName:"pre"},{className:"language-js"}),"import Ajv from 'ajv';\nimport { JSONSchemaBridge } from 'uniforms-bridge-json-schema';\n\nconst ajv = new Ajv({ allErrors: true, useDefaults: true });\n\nconst schema = {\n  title: 'Guest',\n  type: 'object',\n  properties: {\n    fullname: { type: 'string' },\n    email: { type: 'string' },\n    reemail: { type: 'string' },\n    password: {\n      type: 'string',\n      uniforms: {\n        type: 'password'\n      }\n    },\n    repassword: {\n      type: 'string',\n      errorMessage: {\n        type: 'Passwords must match'\n      },\n      const: { $data: '1/password' },\n      uniforms: {\n        type: 'password'\n      }\n    },\n    acceptTermsOfUse: { type: 'boolean' }\n  },\n  required: [\n    'fullname',\n    'email',\n    'reemail',\n    'password',\n    'repassword',\n    'acceptTermsOfUse'\n  ]\n};\n\nfunction createValidator(schema) {\n  const validator = ajv.compile(schema);\n\n  return model => {\n    validator(model);\n\n    if (validator.errors && validator.errors.length) {\n      throw { details: validator.errors };\n    }\n  };\n}\n\nconst schemaValidator = createValidator(schema);\n\nexport default new JSONSchemaBridge(schema, schemaValidator);\n")))}l.isMDXComponent=!0}}]);